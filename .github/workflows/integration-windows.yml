name: DraftV2 Windows Integrations

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: make
        run: make
      - uses: actions/upload-artifact@v2
        with:
          name: draftv2-binary
          path: .\draftv2.exe
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_helm
          path: .\test\check_windows_helm.ps1
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_kustomize
          path: .\test\check_windows_kustomize.ps1
          if-no-files-found: error

  gomodule-helm:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draftv2-binary
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: gambtho/go_echo
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force
      - run: Remove-Item ./langtest/Dockerfile
      - run: Remove-Item ./langtest/.dockerignore
      - run: ./draftv2.exe -v create -c ./test/integration/gomodule/helm.yaml ./langtest/
      - run: cd ./langtest
      - run: ./check_windows_helm.ps1

  gomodule-kustomize:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draftv2-binary
      - run: chmod +x ./draftv2
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: gambtho/go_echo
          path: ./langtest
      - run: rm -rf ./langtest/manifests && rm -f ./langtest/Dockerfile ./langtest/.dockerignore
      - run: ./draftv2 -v create -c ./test/integration/gomodule/kustomize.yaml ./langtest/
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master
      - run: curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && sudo install skaffold /usr/local/bin/
      - run: cd ./langtest && skaffold init --force
      - run: cd ./langtest && skaffold run