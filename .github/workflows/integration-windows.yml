name: draft Windows Integrations

on:
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: make
        run: make
      - uses: actions/upload-artifact@v2
        with:
          name: draft-binary
          path: ./draft.exe
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_helm
          path: ./test/check_windows_helm.ps1
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./test/check_windows_addon_helm.ps1
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./test/check_windows_kustomize.ps1
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./test/check_windows_addon_kustomize.ps1
          if-no-files-found: error

  gomodule-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: gambtho/go_echo
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gomodule/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: gomodule-helm-create
          path: ./langtest
  gomodule-helm-update:
    needs: gomodule-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gomodule-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  gomodule-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: gambtho/go_echo
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gomodule/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: gomodule-kustomize-create
          path: ./langtest
  gomodule-kustomize-update:
    needs: gomodule-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gomodule-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  gomodule-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: gambtho/go_echo
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gomodule/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: gomodule-helm-create
          path: ./langtest/subfolder/
  gomodule-helm-update-subd:
    needs: gomodule-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gomodule-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  python-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/flask-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/python/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: python-helm-create
          path: ./langtest
  python-helm-update:
    needs: python-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: python-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  python-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/flask-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/python/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: python-kustomize-create
          path: ./langtest
  python-kustomize-update:
    needs: python-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: python-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  python-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/flask-hello-world
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/python/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: python-helm-create
          path: ./langtest/subfolder/
  python-helm-update-subd:
    needs: python-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: python-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  rust-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/tiny-http-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/rust/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: rust-helm-create
          path: ./langtest
  rust-helm-update:
    needs: rust-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: rust-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  rust-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/tiny-http-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/rust/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: rust-kustomize-create
          path: ./langtest
  rust-kustomize-update:
    needs: rust-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: rust-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  rust-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/tiny-http-hello-world
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/rust/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: rust-helm-create
          path: ./langtest/subfolder/
  rust-helm-update-subd:
    needs: rust-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: rust-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  javascript-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: davidgamero/express-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/javascript/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: javascript-helm-create
          path: ./langtest
  javascript-helm-update:
    needs: javascript-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: javascript-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  javascript-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: davidgamero/express-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/javascript/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: javascript-kustomize-create
          path: ./langtest
  javascript-kustomize-update:
    needs: javascript-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: javascript-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  javascript-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: davidgamero/express-hello-world
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/javascript/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: javascript-helm-create
          path: ./langtest/subfolder/
  javascript-helm-update-subd:
    needs: javascript-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: javascript-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  ruby-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/ruby-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/ruby/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: ruby-helm-create
          path: ./langtest
  ruby-helm-update:
    needs: ruby-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: ruby-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  ruby-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/ruby-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/ruby/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: ruby-kustomize-create
          path: ./langtest
  ruby-kustomize-update:
    needs: ruby-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: ruby-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  ruby-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/ruby-hello-world
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/ruby/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: ruby-helm-create
          path: ./langtest/subfolder/
  ruby-helm-update-subd:
    needs: ruby-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: ruby-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  csharp-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/csharp-simple-web-app
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/csharp/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: csharp-helm-create
          path: ./langtest
  csharp-helm-update:
    needs: csharp-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: csharp-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  csharp-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/csharp-simple-web-app
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/csharp/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: csharp-kustomize-create
          path: ./langtest
  csharp-kustomize-update:
    needs: csharp-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: csharp-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  csharp-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: imiller31/csharp-simple-web-app
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/csharp/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: csharp-helm-create
          path: ./langtest/subfolder/
  csharp-helm-update-subd:
    needs: csharp-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: csharp-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  java-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-java-server
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/java/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: java-helm-create
          path: ./langtest
  java-helm-update:
    needs: java-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: java-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  java-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-java-server
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/java/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: java-kustomize-create
          path: ./langtest
  java-kustomize-update:
    needs: java-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: java-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  java-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-java-server
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/java/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: java-helm-create
          path: ./langtest/subfolder/
  java-helm-update-subd:
    needs: java-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: java-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  gradle-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-gradle-server
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gradle/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: gradle-helm-create
          path: ./langtest
  gradle-helm-update:
    needs: gradle-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gradle-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  gradle-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-gradle-server
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gradle/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: gradle-kustomize-create
          path: ./langtest
  gradle-kustomize-update:
    needs: gradle-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gradle-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  gradle-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: imiller31/simple-gradle-server
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/gradle/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: gradle-helm-create
          path: ./langtest/subfolder/
  gradle-helm-update-subd:
    needs: gradle-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: gradle-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  swift-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/swift-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/swift/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: swift-helm-create
          path: ./langtest
  swift-helm-update:
    needs: swift-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: swift-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  swift-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/swift-hello-world
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/swift/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: swift-kustomize-create
          path: ./langtest
  swift-kustomize-update:
    needs: swift-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: swift-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  swift-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: OliverMKing/swift-hello-world
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/swift/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: swift-helm-create
          path: ./langtest/subfolder/
  swift-helm-update-subd:
    needs: swift-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: swift-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  erlang-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: bfoley13/ErlangExample
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/erlang/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: erlang-helm-create
          path: ./langtest
  erlang-helm-update:
    needs: erlang-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: erlang-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  erlang-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: bfoley13/ErlangExample
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/erlang/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: erlang-kustomize-create
          path: ./langtest
  erlang-kustomize-update:
    needs: erlang-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: erlang-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  erlang-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: bfoley13/ErlangExample
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/erlang/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: erlang-helm-create
          path: ./langtest/subfolder/
  erlang-helm-update-subd:
    needs: erlang-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: erlang-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/

  clojure-helm-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/clojure-simple-http
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/clojure/helm.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: clojure-helm-create
          path: ./langtest
  clojure-helm-update:
    needs: clojure-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: clojure-helm-create
          path: ./langtest/
      - run: Remove-Item ./langtest/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/

  clojure-kustomize-create:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir ./langtest
      - uses: actions/checkout@v2
        with:
          repository: imiller31/clojure-simple-http
          path: ./langtest
      - run: Remove-Item ./langtest/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/clojure/kustomize.yaml -d ./langtest/
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_kustomize
          path: ./langtest/
      - run: ./check_windows_kustomize.ps1
        working-directory: ./langtest/
      - uses: actions/upload-artifact@v3
        with:
          name: clojure-kustomize-create
          path: ./langtest
  clojure-kustomize-update:
    needs: clojure-kustomize-create
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: clojure-kustomize-create
          path: ./langtest
      - run: Remove-Item ./langtest/overlays/production/ingress.yaml -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_kustomize
          path: ./langtest/
      - run: ./check_windows_addon_kustomize.ps1
        working-directory: ./langtest/
      

  clojure-helm-create-subd:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - run: mkdir -p ./langtest/subfolder
      - uses: actions/checkout@v2
        with:
          repository: imiller31/clojure-simple-http
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/manifests -Recurse -Force -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/Dockerfile -ErrorAction Ignore
      - run: Remove-Item ./langtest/subfolder/.dockerignore -ErrorAction Ignore
      - run: ./draft.exe -v create -c ./test/integration/clojure/helm.yaml -d ./langtest/ -s subfolder
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_helm.ps1
        working-directory: ./langtest/subfolder/
      - uses: actions/upload-artifact@v3
        with:
          name: clojure-helm-create
          path: ./langtest/subfolder/
  clojure-helm-update-subd:
    needs: clojure-helm-create
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: draft-binary
      - uses: actions/download-artifact@v3
        with:
          name: clojure-helm-create
          path: ./langtest/subfolder/
      - run: Remove-Item ./langtest/subfolder/charts/templates/ingress.yaml -Recurse -Force -ErrorAction Ignore
      - run: ./draft.exe -v update -d ./langtest/ -s subfolder/ -a webapp_routing --variable ingress-tls-cert-keyvault-uri=test.cert.keyvault.uri --variable ingress-use-osm-mtls=true --variable ingress-host=host1
      - uses: actions/download-artifact@v2
        with:
          name: check_windows_addon_helm
          path: ./langtest/subfolder/
      - run: ./check_windows_addon_helm.ps1
        working-directory: ./langtest/subfolder/
