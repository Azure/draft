apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if eq (.Config.GetVariableValue "ENABLEAPPROUTING") "true" }}
      {{- if eq (.Config.GetVariableValue "HASMANAGEDCERT") "true" }}
    kubernetes.azure.com/tls-cert-keyvault-managed: "true" 
    kubernetes.azure.com/tls-cert-keyvault-uri: "{{ .Config.GetVariableValue "CERTKEYVAULTURI"}}"
      {{- end}}
    {{- end}}
  name: "{{ .Config.GetVariableValue "INGRESSNAME"}}"
  namespace: "{{ .Config.GetVariableValue "NAMESPACE"}}"
  labels:
    app.kubernetes.io/name: {{ .Config.GetVariableValue "INGRESSNAME"}}
    app.kubernetes.io/part-of: {{ .Config.GetVariableValue "PARTOF" }}
    kubernetes.azure.com/generator: {{ .Config.GetVariableValue "GENERATORLABEL"}}
spec:
  ingressClassName: {{ .Config.GetVariableValue "INGRESSCLASSNAME"}}
  rules:
    - host: "{{ .Config.GetVariableValue "HOST"}}"
      http:
        paths:
          - backend:
              service:
                name: "{{ .Config.GetVariableValue "SERVICENAME"}}"
                port:
                  number: {{ .Config.GetVariableValue "SERVICEPORT"}}
            path: "{{ .Config.GetVariableValue "PATH"}}"
            pathType: Prefix
{{- if eq (.Config.GetVariableValue "ENABLEAPPROUTING") "true" }}
  {{- if eq (.Config.GetVariableValue "HASMANAGEDCERT") "true" }}
  tls:
    - hosts:
        - "{{ .Config.GetVariableValue "HOST"}}"
      secretName: "keyvault-{{ .Config.GetVariableValue "INGRESSNAME"}}"
  {{- end}}
{{- end}}
