set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn draftv2 -v create ./test/go
match_max 100000
expect -exact "\[37mDEBU\[0m\[0000\] number of args passed: 1                     \r
\[36mINFO\[0m\[0000\] detecting language                           \r
\[37mDEBU\[0m\[0000\] with file: ./test/go                         \r
\[37mDEBU\[0m\[0000\] ./test/go is 160 bytes                       \r
\[37mDEBU\[0m\[0000\] with file: test/go/go.mod                    \r
\[37mDEBU\[0m\[0000\] test/go/go.mod is 58 bytes                   \r
\[37mDEBU\[0m\[0000\] reading contents of test/go/go.mod           \r
\[37mDEBU\[0m\[0000\] test/go/go.mod got language hints: \[\]string{\"Linux Kernel Module\", \"AMPL\", \"Modula-2\", \"XML\"} \r
\[37mDEBU\[0m\[0000\] test/go/go.mod got result by data:  XML      \r
\[37mDEBU\[0m\[0000\] with file: test/go/main.go                   \r
\[37mDEBU\[0m\[0000\] test/go/main.go is 599 bytes                 \r
\[37mDEBU\[0m\[0000\] test/go/main.go got result by name:  Go      \r
\[37mDEBU\[0m\[0000\] with file: test/go/scripts                   \r
\[37mDEBU\[0m\[0000\] test/go/scripts is 96 bytes                  \r
\[37mDEBU\[0m\[0000\] with file: test/go/scripts/helm.exp          \r
\[37mDEBU\[0m\[0000\] test/go/scripts/helm.exp is 6287 bytes       \r
\[37mDEBU\[0m\[0000\] reading contents of test/go/scripts/helm.exp \r
\[37mDEBU\[0m\[0000\] test/go/scripts/helm.exp got language hints: \[\]string(nil) \r
\[37mDEBU\[0m\[0000\] test/go/scripts/helm.exp got result by data:  Coq \r
\[37mDEBU\[0m\[0000\] language: XML percent: 0.835253 color: #0060ac \r
\[37mDEBU\[0m\[0000\] language: Go percent: 8.626152 color: #00ADD8 \r
\[37mDEBU\[0m\[0000\] language: Coq percent: 90.538594 color: #d0b68c \r
\[37mDEBU\[0m\[0000\] linguist.ProcessDir(./test/go) result:\r
\r
Error: <nil> \r
\[37mDEBU\[0m\[0000\] Coq:	90.538594 (#d0b68c)                     \r
\[37mDEBU\[0m\[0000\] Go:	8.626152 (#00ADD8)                       \r
\[37mDEBU\[0m\[0000\] XML:	0.835253 (#0060ac)                      \r
\[36mINFO\[0m\[0000\] --> Draft detected Coq (90.538594%)          \r
\[36mINFO\[0m\[0000\] --> Could not find a pack for Coq. Trying to find the next likely language match... \r
\[36mINFO\[0m\[0000\] --> Draft detected Go (8.626152%)            \r
\[?25l\[2K\r\[1m\[31m‚úó\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m ‚ñà\r
\[J\[2K\r "
send -- "8"
expect -exact "\[J\[2K\r8\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 8‚ñà\r
8\[J\[2K\r "
send -- "0"
expect -exact "\[J\[2K\r0\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 80‚ñà\r
0\[J\[2K\r "
send -- "8"
expect -exact "\[J\[2K\r8\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 808‚ñà\r
8\[J\[2K\r "
send -- "0"
expect -exact "\[J\[2K\r0\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 8080‚ñà\r
0\[J\[2K\r "
send -- "\r"
expect -exact "\[J\[2K\r \[J\[2K\r\[1A\[2K\r\[2K\r\[2mPlease Enter the port exposed in the application\[0m\[2m:\[0m 8080\r
\[?25h\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 8080‚ñà\r
\[37mDEBU\[0m\[0002\] replacing PORT with 8080                     \r
\[37mDEBU\[0m\[0002\] checking name override for srcPath: builders/go/Dockerfile, destPath: ./test/go/Dockerfile, destPrefix: ./test/go/ \r
\[37mDEBU\[0m\[0002\] initializing nameOverrideMap                 \r
\[37mDEBU\[0m\[0002\] mapping path: dockerignore, to prefix .      \r
\[37mDEBU\[0m\[0002\] replacing PORT with 8080                     \r
\[37mDEBU\[0m\[0002\] checking name override for srcPath: builders/go/dockerignore, destPath: ./test/go/dockerignore, destPrefix: ./test/go/ \r
\[37mDEBU\[0m\[0002\] overriding file: ./test/go/dockerignore with prefix: . \r
\[?25l\[2K\r\[2mUse the arrow keys to navigate:\[0m \[2m‚Üì\[0m \[2m‚Üë\[0m \[2m‚Üí\[0m \[2m‚Üê\[0m \r
\[2K\r\[34m?\[0m Select k8s Deployment Type: \r
\[2K\r  \[1m‚ñ∏\[0m \[4mhelm\[0m\r
\[2K\r    kustomize\r
\[2K\r    manifests\r
\[J\[2K\r "
send -- "\[B"
expect -exact "\[J\[2K\r\[1A\[1A\[1A\[1A\[1A\[2K\r\[2mUse the arrow keys to navigate:\[0m \[2m‚Üì\[0m \[2m‚Üë\[0m \[2m‚Üí\[0m \[2m‚Üê\[0m \[1B\[2K\r\[34m?\[0m Select k8s Deployment Type: \[1B\[2K\r    helm\[1B\[2K\r  \[1m‚ñ∏\[0m \[4mkustomize\[0m\[1B\[2K\r    manifests\[1B \[J\[2K\r "
send -- "\r"
expect -exact "\[J\[2K\r \[J\[2K\r \[1A\[2K\r\[1A\[2K\r\[1A\[2K\r\[1A\[2K\r\[1A\[2K\r\[2K\r\[32m\[32m‚úî\[0m \[2mkustomize\[0m\r
\[?25h\[J\[2K\r\[?25l\[2K\r\[1m\[31m‚úó\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m ‚ñà\r
\[J\[2K\r "
send -- "8"
expect -exact "\[J\[2K\r8\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 8‚ñà\r
8\[J\[2K\r "
send -- "0"
expect -exact "\[J\[2K\r0\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 80‚ñà\r
0\[J\[2K\r "
send -- "8"
expect -exact "\[J\[2K\r8\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 808‚ñà\r
8\[J\[2K\r "
send -- "0"
expect -exact "\[J\[2K\r0\[J\[2K\r\[1A\[2K\r\[2K\r\[1m\[32m‚úî\[0m \[1mPlease Enter the port exposed in the application\[0m\[1m:\[0m 8080‚ñà\r
0\[J\[2K\r "
send -- "\r"
expect eof
